name: gha-checkout
description: Composite action to checkout current repository, initialise private submoduels and checkout private actions repository
author: Doktor.se

inputs:
  token:
    description: Github PAT with access to repo, submodules and actions
    required: false

  ref:
    description: Git reference to checkout for repo
    required: false

  fetch-depth:
    description: Number of commits to fetch, this applies to code and submodule, not actions. 0 indicates all history for all branches and tags.
    default: 1
    required: false

  submodules:
    description: Whether to checkout submodules `true` to checkout submodules or `recursive` to recursively checkout submodules.
    default: true
    required: false

  actions:
    description: Repository name for private actions, set to 'false' to skip
    default: composite-actions
    required: false

  actions-ref:
    description: Git reference to checkout for private actions
    required: false
    default: main

  global-config:
    description: Configure git to be able to clone other repositories with the provided token, set to 'false' to disable
    required: false
    default: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ inputs.token }}
        fetch-depth: ${{ inputs.fetch-depth }}
        ref: ${{ inputs.ref }}
        submodules: ${{ inputs.submodules }}

    - name: Checkout private actions
      if: ${{ inputs.actions != '' && inputs.actions != 'false' }}
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository_owner }}/${{ inputs.actions }}
        ref: ${{ inputs.actions-ref }}
        path: .github/${{ inputs.actions }}
        token: ${{ inputs.token }}
        persist-credentials: false

    # - name: Configure global git config
    #   if: ${{ inputs.token != '' && inputs.global-config != '' && inputs.global-config != 'false' }}
    #   shell: bash
    #   run: |
    #     echo "DSO_GH_PAT=${{ inputs.token }}" >> $GITHUB_ENV
    #     echo "GIT_ASKPASS=$HOME/.git-askpass" >> $GITHUB_ENV
    #     echo 'echo $DSO_GH_PAT' > $HOME/.git-askpass
    #     chmod +x $HOME/.git-askpass
    #     git config --global url.https://github.com/.insteadOf git@github.com:
    #     echo $GITHUB_ENV

    - name: Configure global git config
      if: ${{ inputs.token != '' && inputs.global-config != '' && inputs.global-config != 'false' }}
      shell: bash
      run: |
        echo "Config before"
        cat ~/.gitconfig || true
        echo "GHA_CHECKOUT_TOKEN=${{ inputs.token }}" >> $GITHUB_ENV
        git config --global credential.https://github.com/${{ github.repository_owner }}.username x-access-token
        git config --global credential.https://github.com/${{ github.repository_owner }}.helper "!f() { test \"$1\" = get && echo \"password=$GHA_CHECKOUT_TOKEN\"; }; f"
        git config --global url.https://github.com/.insteadOf git@github.com:
        echo "Config after"
        cat ~/.gitconfig


    # - name: Configure global git config
    #   if: ${{ inputs.token != '' && inputs.global-config != '' && inputs.global-config != 'false' }}
    #   shell: bash
    #   run: |
    #     # ${{ runner.temp }}
    #     # echo "https://x-access-token:${{ inputs.token }}@github.com/" >> ~/.git-credentials
    #     # echo "Setting credential helper"
    #     git config --global credential.https://github.com/${{ github.repository_owner }}.username x-access-token
    #     git config --global credential.https://github.com/${{ github.repository_owner }}.helper "!f() { test \"$1\" = get && echo \"password=${{ inputs.token }}\"; }; f"
    #     # echo "Unsetting existing config, if any"
    #     git config --global --unset-all "url.https://github.com/.insteadOf" || echo "Nothing to unset, Config didn't exist"
    #     # echo "Setting ssh -> https"
    #     git config --global --add url.https://github.com/.insteadOf git@github.com:
    #     echo "Done"
    #     cat ~/.gitconfig
